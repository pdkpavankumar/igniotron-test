{"version":3,"sources":["reducers/noodleReducer.js","reducers/index.js","store/noodleStore.js","actionCreator/noodleAction.js","components/NoodleCard.js","components/NoodleList.js","components/NoodleDetail.js","components/NoodleApp.js","reportWebVitals.js","index.js"],"names":["noodleReducer","state","type","payload","filter","item","id","filtered","toLowerCase","includes","brand","combineReducers","noodles","store","createStore","reducer","addNoodles","items","listNoodles","getNoodleById","getNoodleByBrand","NoodleCard","history","useHistory","className","onClick","push","src","img","Image","alt","Variety","Brand","Style","Country","Stars","connect","dispatch","bindActionCreators","props","useState","value","setValue","useEffect","length","Promise","all","fetch","then","res","json","map","index","Math","floor","random","catch","err","placeholder","onChange","e","target","selectedItem","useParams","parseInt","NoodleApp","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33f74d67.chunk.js","sourcesContent":["const noodleReducer = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case \"NOODLE_ADD\":\r\n      return [...state, ...payload];\r\n    case \"NOODLE_LIST\":\r\n      return [...state];\r\n    case \"NOODLE_BY_ID\":\r\n      return [...state.filter((item) => item.id === payload.id)];\r\n    case \"NOODLE_BY_BRAND\":\r\n      return { filtered: [...state.filter((item) => item[\"Brand\"].toLowerCase().includes(payload.brand.toLowerCase()))] }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default noodleReducer;","import { combineReducers } from 'redux';\r\nimport noodleReducer from \"./noodleReducer\";\r\n\r\nexport default combineReducers({ noodles: noodleReducer });","import { createStore } from 'redux';\r\nimport reducer from '../reducers';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","const addNoodles = (items) => {\r\n  return {\r\n    type: 'NOODLE_ADD',\r\n    payload: [...items]\r\n  }\r\n}\r\n\r\nconst listNoodles = () => {\r\n  return {\r\n    type: 'NOODLE_LIST'\r\n  }\r\n};\r\n\r\nconst getNoodleById = (id) => {\r\n  return {\r\n    type: 'NOODLE_BY_ID',\r\n    payload: { id }\r\n  }\r\n};\r\n\r\nconst getNoodleByBrand = (brand) => {\r\n  return {\r\n    type: 'NOODLE_BY_BRAND',\r\n    payload: { brand }\r\n  }\r\n};\r\n\r\n\r\nexport { addNoodles, listNoodles, getNoodleById, getNoodleByBrand };\r\n","import { useHistory } from 'react-router-dom';\r\nconst NoodleCard = ({ item, id }) => {\r\n  const history = useHistory();\r\n\r\n  const hanldeClick = () => {\r\n    history.push(`/item/${id}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\" onClick={hanldeClick}>\r\n      <img src={item.img.Image} alt={item.Variety} className=\"card-image\" />\r\n      <p>Brand - {item.Brand}</p>\r\n      <p>Variety - {item.Variety}</p>\r\n      <p>Style - {item.Style}</p>\r\n      <p>Country - {item.Country}</p>\r\n      <p>Stars - {item.Stars}</p>\r\n      <p>Top Ten - {item.[\"Top Ten\"]}</p>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default NoodleCard;","import { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { useEffect, useState } from 'react';\r\nimport { listNoodles, addNoodles, getNoodleByBrand } from '../actionCreator/noodleAction';\r\nimport NoodleCard from './NoodleCard';\r\n\r\nconst NoodleList = (props) => {\r\n\r\n  const [value, setValue] = useState('');\r\n  const hanldeChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.items.length === 0 && Promise.all([\r\n      fetch('https://s3-ap-southeast-1.amazonaws.com/he-public-data/TopRamen8d30951.json').then(res => res.json()),\r\n      fetch('https://s3-ap-southeast-1.amazonaws.com/he-public-data/noodlesec253ad.json').then(res => res.json())]\r\n    ).then(([res, img]) => {\r\n      res = res.map((item, index) => { return { ...item, id: index, img: img[Math.floor(Math.random() * img.length)] } });\r\n      props.addNoodles(res);\r\n    })\r\n      .catch(err => { throw err });\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"title\">Noodle</div>\r\n      <div className=\"searchbar\">\r\n        <input type=\"text\" placeholder=\"Search any brand name...\" onChange={hanldeChange}></input>\r\n      </div>\r\n      <div className=\"cards\">\r\n        {value ? props.items.filter((item) => {\r\n          return item[\"Brand\"].toLowerCase().includes(value.toLowerCase())\r\n        }).map((item) => {\r\n          return <NoodleCard item={item} id={item.id} key={item.id} />\r\n        }) : props.items.map((item) => {\r\n          return <NoodleCard item={item} id={item.id} key={item.id} />\r\n        })}\r\n      </div>\r\n    </>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { items: [...state.noodles] }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    dispatch,\r\n    ...bindActionCreators({ listNoodles, addNoodles, getNoodleByBrand }, dispatch)\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoodleList);","import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { getNoodleById } from '../actionCreator/noodleAction';\r\nimport { useParams } from 'react-router-dom';\r\nconst NoodleDetail = (props) => {\r\n  const item = props.selectedItem.length === 1 && props.selectedItem[0];\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    props.getNoodleById(parseInt(id));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {props.selectedItem.length === 1 ?\r\n        <>\r\n          <div className=\"title\">Noodle</div>\r\n          <div className=\"sub-title\">Detail</div>\r\n          <div className=\"detail\">\r\n            <img src={item.img?.Image} alt={item.Variety} className=\"card-image-detail\" />\r\n            <div className=\"details\">\r\n              <p>Brand - {item.Brand}</p>\r\n              <p>Variety - {item.Variety}</p>\r\n              <p>Style - {item.Style}</p>\r\n              <p>Country - {item.Country}</p>\r\n              <p>Stars - {item.Stars}</p>\r\n              <p>Top Ten - {item.[\"Top Ten\"]}</p>\r\n            </div>\r\n          </div>\r\n        </>\r\n        :\r\n        'Loading...'}\r\n\r\n    </div>\r\n  )\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return { selectedItem: [...state.noodles] }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    dispatch,\r\n    ...bindActionCreators({ getNoodleById }, dispatch)\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoodleDetail);","import React from 'react';\r\nimport { Provider as ReduxProvider } from 'react-redux';\r\nimport store from '../store/noodleStore';\r\nimport NoodleList from './NoodleList';\r\nimport NoodleDetail from './NoodleDetail';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nconst NoodleApp = () => {\r\n  return (\r\n    <>\r\n      <ReduxProvider store={store}>\r\n        <Router>\r\n          <Route path=\"/\" exact>\r\n            <NoodleList />\r\n          </Route>\r\n          <Route path=\"/item/:id\" exact>\r\n            <NoodleDetail />\r\n          </Route>\r\n        </Router>\r\n      </ReduxProvider>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NoodleApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport NoodleApp from './components/NoodleApp';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <NoodleApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}